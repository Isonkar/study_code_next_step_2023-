'''
Рейтинг таксистов
Руководитель таксопарка хочет увидеть отчет по всем таксистам, где нужно указать имя таксиста и его среднюю оценку. Информацию в отчете нужно расположить по убыванию средней оценки таксиста.
После каждого успешно выполненного заказа, клиент выставляет таксисту оценку - целое число от 1 до 5.
Входные данные
Программа будет принимать строки, в которых сперва указывается имя таксиста, а затем через запятую с пробелом его оценка за заказ.
Строка "конец" является последней строкой и означает окончание ввода

Выходные данные
Нужно расположить таксистов в порядке убывания их средней оценке и вывести имя каждого таксиста и его среднюю оценку в отдельной строке. 
В случае совпадения средних оценок нужно расположить каждую группу таксистов, имеющих одинаковый рейтинг,  по имени в алфавитном порядке 

Sample Input 1:

Джек, 2
Джек, 3
Билл, 5
Билл, 4
Билл, 4
Билл, 3
конец
Sample Output 1:

Билл 4.0
Джек 2.5
Sample Input 2:

Зина, 5
Зина, 3
Гермиона, 4
Гермиона, 4
конец
Sample Output 2:

Гермиона 4.0
Зина 4.0
'''

def taxi_drivers():
    dt = dict()
    while True:
        data = input().split(',')
        if data[0] == 'конец': break
        else:
            if data[0] not in dt.keys():
                dt[data[0]] = [int(data[1])]
            else: dt[data[0]].append(int(data[1]))
    for k,v in dt.items():
        dt[k] = sum(v)/len(v)
    return(dt)

def sort_dt(dt: dict):
    for k, v in sorted(dt.items(), key=lambda x: (-x[1], x[0])):
        print(f'{k} {v}')

sort_dt(taxi_drivers())
